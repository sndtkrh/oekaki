{"version":3,"sources":["edge/edge.bs.js","color.bs.js","fill/fill.bs.js","appState.bs.js","tikz.bs.js","previewer/previewer.bs.js","coordinate/coordinate.bs.js","removeName.bs.js","selector/cell_selector.bs.js","selector/edgeSelector.bs.js","selector/fillSelector.bs.js","selector/coordinateSelector.bs.js","app.bs.js","serviceWorker.js","index.js"],"names":["stringToDirection","s","render","e","tmp","match","curve","f","d","Curry","Printf","_0","TAG","_1","edge_id","draw","scoord","tcoord","React","key","select","selectedDir","dirOnChange","lineOrBezier","undefined","dirToString","opt","c","value","onChange","initState","name","sname","tname","sdir","tdir","Add","Props","updater","setState","state","className","onSubmit","preventDefault","match$1","param","type","a","target","st","dirStr","onClick","toString","stringToEdgeDir","rotateEdge","edir","edge","edgesToString","edges","$$String","List","fill","fill_id","color","enames","ename","enamesStr","selectedColor","colorOnChange","Color$YourProjectName","edStr","hd","tl","NamePool","$$Set","compare","splitList","pred","l","_left","_right","right","left","rest","h","findCoordinate","cs","coordinate_id","findEdge","es","findEdges","edgeNames","l$prime","Fill$YourProjectName","remove","b","usedCoordinate","b$prime","fills","usedEdge","coordinates","match$2","mode","scale","svgx","svgy","namePool","Pervasives","fromCoordinate","_2","_3","x","y","fromDir","dir","fromEdge$prime","d1","d2","fromEdge","make","coordinatesTikz","fillsTikz","AppState$YourProjectName","head","func","prevCoord","fromFill","edgesTikz","str","tikz","id","convert","convertP","controlPoint","edgeCurveD","sy","sx","c$1","ty","tx","sY","sX","match$3","tY","tX","match$4","match$5","match$6","coords","$$Array","prevCoordName","stroke","fillToSVG","cx","String","cy","r","fontSize","textAnchor","coordToSVG","startOffset","xlinkHref","edgeToSVG","height","width","Belt_Float","MakeCellSelector","C","empty","include","Cell_selector$YourProjectName","Edge$YourProjectName","Coordinate$YourProjectName","require","CoordinateSelector$YourProjectName","EdgeSelector$YourProjectName","FillSelector$YourProjectName","Previewer$YourProjectName","Tikz$YourProjectName","RemoveName$YourProjectName","param$1","param$2","np","find_opt","elm","newnp","add","param$3","param$4","fs","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e916b59.chunk.js","sourcesContent":["// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Printf from \"bs-platform/lib/es6/printf.js\";\n\nfunction stringToDirection(s) {\n  switch (s) {\n    case \"above\" :\n        return /* Above */0;\n    case \"below\" :\n        return /* Below */1;\n    case \"left\" :\n        return /* Left */2;\n    case \"right\" :\n        return /* Right */3;\n    default:\n      return ;\n  }\n}\n\nfunction dirToString(d) {\n  switch (d) {\n    case /* Above */0 :\n        return \"above\";\n    case /* Below */1 :\n        return \"below\";\n    case /* Left */2 :\n        return \"left\";\n    case /* Right */3 :\n        return \"right\";\n    \n  }\n}\n\nvar name = \"edge\";\n\nfunction render(e) {\n  var match = e.curve;\n  var tmp;\n  if (match) {\n    var f = function (d) {\n      switch (d) {\n        case /* Above */0 :\n            return \"above\";\n        case /* Below */1 :\n            return \"below\";\n        case /* Left */2 :\n            return \"left\";\n        case /* Right */3 :\n            return \"right\";\n        \n      }\n    };\n    tmp = Curry._2(Printf.sprintf(/* Format */{\n              _0: {\n                TAG: /* String_literal */11,\n                _0: \"~(\",\n                _1: {\n                  TAG: /* String */2,\n                  _0: /* No_padding */0,\n                  _1: {\n                    TAG: /* String_literal */11,\n                    _0: \", \",\n                    _1: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: {\n                        TAG: /* Char_literal */12,\n                        _0: /* \")\" */41,\n                        _1: /* End_of_format */0\n                      }\n                    }\n                  }\n                }\n              },\n              _1: \"~(%s, %s)\"\n            }), f(match._0), f(match._1));\n  } else {\n    tmp = \"--\";\n  }\n  var s = Curry._5(Printf.sprintf(/* Format */{\n            _0: {\n              TAG: /* Char_literal */12,\n              _0: /* \"(\" */40,\n              _1: {\n                TAG: /* String */2,\n                _0: /* No_padding */0,\n                _1: {\n                  TAG: /* String_literal */11,\n                  _0: \") draw=\",\n                  _1: {\n                    TAG: /* String */2,\n                    _0: /* No_padding */0,\n                    _1: {\n                      TAG: /* String_literal */11,\n                      _0: \" (\",\n                      _1: {\n                        TAG: /* String */2,\n                        _0: /* No_padding */0,\n                        _1: {\n                          TAG: /* String_literal */11,\n                          _0: \") \",\n                          _1: {\n                            TAG: /* String */2,\n                            _0: /* No_padding */0,\n                            _1: {\n                              TAG: /* String_literal */11,\n                              _0: \" (\",\n                              _1: {\n                                TAG: /* String */2,\n                                _0: /* No_padding */0,\n                                _1: {\n                                  TAG: /* Char_literal */12,\n                                  _0: /* \")\" */41,\n                                  _1: /* End_of_format */0\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            _1: \"(%s) draw=%s (%s) %s (%s)\"\n          }), e.edge_id, e.draw ? \"yes\" : \"no\", e.scoord, tmp, e.tcoord);\n  return React.createElement(\"div\", {\n              key: e.edge_id\n            }, s);\n}\n\nvar Edge = {\n  name: name,\n  render: render\n};\n\nfunction select(selectedDir, dirOnChange) {\n  var f = function (lineOrBezier) {\n    if (lineOrBezier !== undefined) {\n      return dirToString(lineOrBezier);\n    } else {\n      return \"-\";\n    }\n  };\n  var opt = function (c) {\n    return React.createElement(\"option\", {\n                value: f(c)\n              }, f(c));\n  };\n  return React.createElement(\"select\", {\n              value: f(selectedDir),\n              onChange: dirOnChange\n            }, opt(undefined), opt(/* Above */0), opt(/* Below */1), opt(/* Left */2), opt(/* Right */3));\n}\n\nvar initState = {\n  name: \"\",\n  draw: true,\n  sname: \"\",\n  tname: \"\",\n  sdir: undefined,\n  tdir: undefined\n};\n\nfunction Edge$Add(Props) {\n  var updater = Props.updater;\n  var match = React.useState(function () {\n        return initState;\n      });\n  var setState = match[1];\n  var state = match[0];\n  var handleName = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: a,\n                          draw: st.draw,\n                          sname: st.sname,\n                          tname: st.tname,\n                          sdir: st.sdir,\n                          tdir: st.tdir\n                        };\n                }));\n  };\n  var handleSname = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: st.name,\n                          draw: st.draw,\n                          sname: a,\n                          tname: st.tname,\n                          sdir: st.sdir,\n                          tdir: st.tdir\n                        };\n                }));\n  };\n  var handleTname = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: st.name,\n                          draw: st.draw,\n                          sname: st.sname,\n                          tname: a,\n                          sdir: st.sdir,\n                          tdir: st.tdir\n                        };\n                }));\n  };\n  var drawOnChange = function (e) {\n    e.preventDefault();\n    var draw = e.target.value;\n    return Curry._1(setState, (function (s) {\n                  if (draw === \"yes\") {\n                    return {\n                            name: s.name,\n                            draw: true,\n                            sname: s.sname,\n                            tname: s.tname,\n                            sdir: s.sdir,\n                            tdir: s.tdir\n                          };\n                  } else {\n                    return {\n                            name: s.name,\n                            draw: false,\n                            sname: s.sname,\n                            tname: s.tname,\n                            sdir: s.sdir,\n                            tdir: s.tdir\n                          };\n                  }\n                }));\n  };\n  var sdirOnChange = function (e) {\n    e.preventDefault();\n    var dirStr = e.target.value;\n    return Curry._1(setState, (function (s) {\n                  var d = stringToDirection(dirStr);\n                  var match = d !== undefined ? [\n                      d,\n                      s.tdir\n                    ] : [\n                      undefined,\n                      undefined\n                    ];\n                  return {\n                          name: s.name,\n                          draw: s.draw,\n                          sname: s.sname,\n                          tname: s.tname,\n                          sdir: match[0],\n                          tdir: match[1]\n                        };\n                }));\n  };\n  var tdirOnChange = function (e) {\n    e.preventDefault();\n    var dirStr = e.target.value;\n    return Curry._1(setState, (function (s) {\n                  var d = stringToDirection(dirStr);\n                  var match = d !== undefined ? [\n                      s.sdir,\n                      d\n                    ] : [\n                      undefined,\n                      undefined\n                    ];\n                  return {\n                          name: s.name,\n                          draw: s.draw,\n                          sname: s.sname,\n                          tname: s.tname,\n                          sdir: match[0],\n                          tdir: match[1]\n                        };\n                }));\n  };\n  var handleSubmit = function (e) {\n    e.preventDefault();\n    var match = state.sdir;\n    var match$1 = state.tdir;\n    var curve = match !== undefined && match$1 !== undefined ? /* Bezier */({\n          _0: match,\n          _1: match$1\n        }) : /* Line */0;\n    Curry._5(updater, state.name, state.draw, state.sname, state.tname, curve);\n    return Curry._1(setState, (function (param) {\n                  return initState;\n                }));\n  };\n  return React.createElement(\"div\", {\n              className: \"add edge\"\n            }, React.createElement(\"form\", {\n                  onSubmit: handleSubmit\n                }, \"Edge: \", \"name=\", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"name\",\n                      type: \"text\",\n                      value: state.name,\n                      onChange: handleName\n                    }), \" draw:\", React.createElement(\"select\", {\n                      value: state.draw ? \"yes\" : \"no\",\n                      onChange: drawOnChange\n                    }, React.createElement(\"option\", {\n                          value: \"yes\"\n                        }, \"yes\"), React.createElement(\"option\", {\n                          value: \"no\"\n                        }, \"no\")), \", start=\", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"sname\",\n                      type: \"text\",\n                      value: state.sname,\n                      onChange: handleSname\n                    }), select(state.sdir, sdirOnChange), \", end=\", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"tname\",\n                      type: \"text\",\n                      value: state.tname,\n                      onChange: handleTname\n                    }), select(state.tdir, tdirOnChange), React.createElement(\"input\", {\n                      type: \"submit\",\n                      value: \"add/modify\",\n                      onClick: (function (param) {\n                          \n                        })\n                    })));\n}\n\nvar Add = {\n  select: select,\n  initState: initState,\n  make: Edge$Add\n};\n\nexport {\n  stringToDirection ,\n  dirToString ,\n  Edge ,\n  name ,\n  render ,\n  Add ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as React from \"react\";\n\nfunction fromString(s) {\n  switch (s) {\n    case \"black\" :\n        return /* Black */0;\n    case \"blue\" :\n        return /* Blue */4;\n    case \"green\" :\n        return /* Green */3;\n    case \"red\" :\n        return /* Red */2;\n    case \"white\" :\n        return /* White */1;\n    default:\n      return ;\n  }\n}\n\nfunction toString(c) {\n  switch (c) {\n    case /* Black */0 :\n        return \"black\";\n    case /* White */1 :\n        return \"white\";\n    case /* Red */2 :\n        return \"red\";\n    case /* Green */3 :\n        return \"green\";\n    case /* Blue */4 :\n        return \"blue\";\n    \n  }\n}\n\nfunction select(selectedColor, colorOnChange) {\n  var opt = function (c) {\n    return React.createElement(\"option\", {\n                key: toString(c),\n                value: toString(c)\n              }, toString(c));\n  };\n  return React.createElement(\"select\", {\n              value: toString(selectedColor),\n              onChange: colorOnChange\n            }, opt(/* Black */0), opt(/* Red */2), opt(/* Green */3), opt(/* Blue */4), opt(/* White */1));\n}\n\nexport {\n  fromString ,\n  toString ,\n  select ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Printf from \"bs-platform/lib/es6/printf.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Color$YourProjectName from \"../color.bs.js\";\n\nfunction edgeDirToString(edir) {\n  if (edir) {\n    return \"reverse\";\n  } else {\n    return \"forward\";\n  }\n}\n\nfunction stringToEdgeDir(s) {\n  if (s === \"reverse\") {\n    return /* Reverse */1;\n  } else {\n    return /* Forward */0;\n  }\n}\n\nfunction rotateEdge(edir, edge) {\n  if (!edir) {\n    return edge;\n  }\n  var match = edge.curve;\n  if (match) {\n    return {\n            edge_id: edge.edge_id,\n            scoord: edge.tcoord,\n            tcoord: edge.scoord,\n            curve: /* Bezier */{\n              _0: match._1,\n              _1: match._0\n            },\n            draw: edge.draw\n          };\n  } else {\n    return {\n            edge_id: edge.edge_id,\n            scoord: edge.tcoord,\n            tcoord: edge.scoord,\n            curve: edge.curve,\n            draw: edge.draw\n          };\n  }\n}\n\nfunction edgesToString(edges) {\n  return $$String.concat(\" \", List.map((function (param) {\n                    var s = param[0];\n                    if (param[1]) {\n                      return \"rev(\" + (s + \")\");\n                    } else {\n                      return s;\n                    }\n                  }), edges));\n}\n\nvar name = \"fill\";\n\nfunction render(fill) {\n  var s = Curry._2(Printf.sprintf(/* Format */{\n            _0: {\n              TAG: /* Char_literal */12,\n              _0: /* \"(\" */40,\n              _1: {\n                TAG: /* String */2,\n                _0: /* No_padding */0,\n                _1: {\n                  TAG: /* String_literal */11,\n                  _0: \") \",\n                  _1: {\n                    TAG: /* String */2,\n                    _0: /* No_padding */0,\n                    _1: /* End_of_format */0\n                  }\n                }\n              }\n            },\n            _1: \"(%s) %s\"\n          }), fill.fill_id, edgesToString(fill.edges));\n  return React.createElement(\"div\", {\n              key: fill.fill_id\n            }, s);\n}\n\nvar Fill = {\n  name: name,\n  render: render\n};\n\nvar initState = {\n  name: \"\",\n  color: /* Black */0,\n  enames: /* [] */0,\n  edir: /* Forward */0,\n  ename: \"\"\n};\n\nfunction Fill$Add(Props) {\n  var updater = Props.updater;\n  var match = React.useState(function () {\n        return initState;\n      });\n  var setState = match[1];\n  var state = match[0];\n  var enamesStr = edgesToString(List.rev(state.enames));\n  var colorOnChange = function (e) {\n    e.preventDefault();\n    var c = Color$YourProjectName.fromString(e.target.value);\n    return Curry._1(setState, (function (s) {\n                  if (c !== undefined) {\n                    return {\n                            name: s.name,\n                            color: c,\n                            enames: s.enames,\n                            edir: s.edir,\n                            ename: s.ename\n                          };\n                  } else {\n                    return s;\n                  }\n                }));\n  };\n  var handleName = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: a,\n                          color: st.color,\n                          enames: st.enames,\n                          edir: st.edir,\n                          ename: st.ename\n                        };\n                }));\n  };\n  var handleEname = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: st.name,\n                          color: st.color,\n                          enames: st.enames,\n                          edir: st.edir,\n                          ename: a\n                        };\n                }));\n  };\n  var edirOnChange = function (e) {\n    e.preventDefault();\n    var edStr = e.target.value;\n    return Curry._1(setState, (function (s) {\n                  return {\n                          name: s.name,\n                          color: s.color,\n                          enames: s.enames,\n                          edir: stringToEdgeDir(edStr),\n                          ename: s.ename\n                        };\n                }));\n  };\n  var handleAppend = function (e) {\n    e.preventDefault();\n    return Curry._1(setState, (function (param) {\n                  return {\n                          name: state.name,\n                          color: state.color,\n                          enames: {\n                            hd: [\n                              state.ename,\n                              state.edir\n                            ],\n                            tl: state.enames\n                          },\n                          edir: state.edir,\n                          ename: \"\"\n                        };\n                }));\n  };\n  var handleSubmit = function (e) {\n    e.preventDefault();\n    Curry._3(updater, state.name, state.color, List.rev(state.enames));\n    return Curry._1(setState, (function (param) {\n                  return initState;\n                }));\n  };\n  return React.createElement(\"div\", {\n              className: \"add fill\"\n            }, React.createElement(\"form\", {\n                  onSubmit: handleSubmit\n                }, \"Fill: \", \"name=\", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"name\",\n                      type: \"text\",\n                      value: state.name,\n                      onChange: handleName\n                    }), Color$YourProjectName.select(state.color, colorOnChange), React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"ename\",\n                      type: \"text\",\n                      value: state.ename,\n                      onChange: handleEname\n                    }), React.createElement(\"select\", {\n                      value: state.edir ? \"reverse\" : \"forward\",\n                      onChange: edirOnChange\n                    }, React.createElement(\"option\", {\n                          value: \"forward\"\n                        }, \"forward\"), React.createElement(\"option\", {\n                          value: \"reverse\"\n                        }, \"reverse\")), React.createElement(\"button\", {\n                      onClick: handleAppend\n                    }, \"append\"), React.createElement(\"input\", {\n                      type: \"submit\",\n                      value: \"add/modify\",\n                      onClick: (function (param) {\n                          \n                        })\n                    }), enamesStr));\n}\n\nvar Add = {\n  initState: initState,\n  make: Fill$Add\n};\n\nexport {\n  edgeDirToString ,\n  stringToEdgeDir ,\n  rotateEdge ,\n  edgesToString ,\n  Fill ,\n  name ,\n  render ,\n  Add ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as $$Set from \"bs-platform/lib/es6/set.js\";\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Fill$YourProjectName from \"./fill/fill.bs.js\";\n\nvar NamePool = $$Set.Make({\n      compare: $$String.compare\n    });\n\nfunction splitList(pred, l) {\n  var _left = /* [] */0;\n  var _right = l;\n  while(true) {\n    var right = _right;\n    var left = _left;\n    if (!right) {\n      return [\n              List.rev(left),\n              /* [] */0\n            ];\n    }\n    var rest = right.tl;\n    var h = right.hd;\n    if (Curry._1(pred, h)) {\n      return [\n              List.rev(left),\n              rest\n            ];\n    }\n    _right = rest;\n    _left = {\n      hd: h,\n      tl: left\n    };\n    continue ;\n  };\n}\n\nfunction findCoordinate(cs, name) {\n  var f = function (c) {\n    return c.coordinate_id === name;\n  };\n  if (List.exists(f, cs)) {\n    return List.find(f, cs);\n  }\n  \n}\n\nfunction findEdge(es, name) {\n  var f = function (e) {\n    return e.edge_id === name;\n  };\n  if (List.exists(f, es)) {\n    return List.find(f, es);\n  }\n  \n}\n\nfunction findEdges(es, edgeNames) {\n  var f = function (param, l$prime) {\n    if (l$prime === undefined) {\n      return ;\n    }\n    var e = findEdge(es, param[0]);\n    if (e !== undefined) {\n      return {\n              hd: Fill$YourProjectName.rotateEdge(param[1], e),\n              tl: l$prime\n            };\n    }\n    \n  };\n  return List.fold_right(f, edgeNames, /* [] */0);\n}\n\nfunction addCoordinate(setState, name, x, y) {\n  return Curry._1(setState, (function (s) {\n                var cs = s.coordinates;\n                var np = s.namePool;\n                var match = Curry._2(NamePool.find_opt, name, np);\n                var nameExists = match !== undefined;\n                if (name === \"\") {\n                  return s;\n                }\n                var elm = {\n                  coordinate_id: name,\n                  x: x,\n                  y: y\n                };\n                if (nameExists) {\n                  var p = function (c) {\n                    return c.coordinate_id === name;\n                  };\n                  var match$1 = splitList(p, cs);\n                  return {\n                          mode: s.mode,\n                          scale: s.scale,\n                          svgx: s.svgx,\n                          svgy: s.svgy,\n                          namePool: s.namePool,\n                          coordinates: Pervasives.$at(match$1[0], Pervasives.$at({\n                                    hd: elm,\n                                    tl: /* [] */0\n                                  }, match$1[1])),\n                          edges: s.edges,\n                          fills: s.fills\n                        };\n                }\n                var newnp = Curry._2(NamePool.add, name, np);\n                return {\n                        mode: s.mode,\n                        scale: s.scale,\n                        svgx: s.svgx,\n                        svgy: s.svgy,\n                        namePool: newnp,\n                        coordinates: {\n                          hd: elm,\n                          tl: cs\n                        },\n                        edges: s.edges,\n                        fills: s.fills\n                      };\n              }));\n}\n\nfunction addEdge(setState, name, draw, sname, tname, curve) {\n  return Curry._1(setState, (function (s) {\n                var np = s.namePool;\n                var es = s.edges;\n                var cs = s.coordinates;\n                var match = findCoordinate(cs, sname);\n                var match$1 = findCoordinate(cs, tname);\n                if (match === undefined) {\n                  return s;\n                }\n                if (match$1 === undefined) {\n                  return s;\n                }\n                var match$2 = Curry._2(NamePool.find_opt, name, np);\n                var nameExists = match$2 !== undefined;\n                if (name === \"\") {\n                  return s;\n                }\n                var elm = {\n                  edge_id: name,\n                  scoord: sname,\n                  tcoord: tname,\n                  curve: curve,\n                  draw: draw\n                };\n                if (nameExists) {\n                  var p = function (e) {\n                    return e.edge_id === name;\n                  };\n                  var match$3 = splitList(p, es);\n                  return {\n                          mode: s.mode,\n                          scale: s.scale,\n                          svgx: s.svgx,\n                          svgy: s.svgy,\n                          namePool: s.namePool,\n                          coordinates: s.coordinates,\n                          edges: Pervasives.$at(match$3[0], Pervasives.$at({\n                                    hd: elm,\n                                    tl: /* [] */0\n                                  }, match$3[1])),\n                          fills: s.fills\n                        };\n                }\n                var newnp = Curry._2(NamePool.add, name, np);\n                return {\n                        mode: s.mode,\n                        scale: s.scale,\n                        svgx: s.svgx,\n                        svgy: s.svgy,\n                        namePool: newnp,\n                        coordinates: s.coordinates,\n                        edges: {\n                          hd: elm,\n                          tl: es\n                        },\n                        fills: s.fills\n                      };\n              }));\n}\n\nfunction addFill(setState, name, color, enames) {\n  return Curry._1(setState, (function (s) {\n                var np = s.namePool;\n                var es = s.edges;\n                var fs = s.fills;\n                var _edges = findEdges(es, enames);\n                if (_edges === undefined) {\n                  return s;\n                }\n                var match = Curry._2(NamePool.find_opt, name, np);\n                var nameExists = match !== undefined;\n                if (name === \"\") {\n                  return s;\n                }\n                var elm = {\n                  fill_id: name,\n                  color: color,\n                  edges: enames\n                };\n                if (nameExists) {\n                  var p = function (e) {\n                    return e.fill_id === name;\n                  };\n                  var match$1 = splitList(p, fs);\n                  return {\n                          mode: s.mode,\n                          scale: s.scale,\n                          svgx: s.svgx,\n                          svgy: s.svgy,\n                          namePool: s.namePool,\n                          coordinates: s.coordinates,\n                          edges: s.edges,\n                          fills: Pervasives.$at(match$1[0], Pervasives.$at({\n                                    hd: elm,\n                                    tl: /* [] */0\n                                  }, match$1[1]))\n                        };\n                }\n                var newnp = Curry._2(NamePool.add, name, np);\n                return {\n                        mode: s.mode,\n                        scale: s.scale,\n                        svgx: s.svgx,\n                        svgy: s.svgy,\n                        namePool: newnp,\n                        coordinates: s.coordinates,\n                        edges: s.edges,\n                        fills: {\n                          hd: elm,\n                          tl: fs\n                        }\n                      };\n              }));\n}\n\nfunction usedCoordinate(name, state) {\n  var a = function (b, edge) {\n    if (b || edge.scoord === name) {\n      return true;\n    } else {\n      return edge.tcoord === name;\n    }\n  };\n  return List.fold_left(a, false, state.edges);\n}\n\nfunction usedEdge(name, state) {\n  var a = function (b, fill) {\n    if (b) {\n      return true;\n    }\n    var a$prime = function (b$prime, param) {\n      var edge = findEdge(state.edges, param[0]);\n      if (edge !== undefined) {\n        if (b$prime) {\n          return true;\n        } else {\n          return edge.edge_id === name;\n        }\n      } else {\n        return false;\n      }\n    };\n    return List.fold_left(a$prime, false, fill.edges);\n  };\n  return List.fold_left(a, false, state.fills);\n}\n\nfunction remove(setState, name) {\n  return Curry._1(setState, (function (s) {\n                if (usedCoordinate(name, s) || usedEdge(name, s)) {\n                  return s;\n                }\n                var match = splitList((function (c) {\n                        return c.coordinate_id === name;\n                      }), s.coordinates);\n                var match$1 = splitList((function (c) {\n                        return c.edge_id === name;\n                      }), s.edges);\n                var match$2 = splitList((function (c) {\n                        return c.fill_id === name;\n                      }), s.fills);\n                return {\n                        mode: s.mode,\n                        scale: s.scale,\n                        svgx: s.svgx,\n                        svgy: s.svgy,\n                        namePool: s.namePool,\n                        coordinates: Pervasives.$at(match[0], match[1]),\n                        edges: Pervasives.$at(match$1[0], match$1[1]),\n                        fills: Pervasives.$at(match$2[0], match$2[1])\n                      };\n              }));\n}\n\nexport {\n  NamePool ,\n  splitList ,\n  findCoordinate ,\n  findEdge ,\n  findEdges ,\n  addCoordinate ,\n  addEdge ,\n  addFill ,\n  usedCoordinate ,\n  usedEdge ,\n  remove ,\n  \n}\n/* NamePool Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Printf from \"bs-platform/lib/es6/printf.js\";\nimport * as $$String from \"bs-platform/lib/es6/string.js\";\nimport * as Pervasives from \"bs-platform/lib/es6/pervasives.js\";\nimport * as Color$YourProjectName from \"./color.bs.js\";\nimport * as AppState$YourProjectName from \"./appState.bs.js\";\n\nvar beginTikz = \"\\\\begin{tikzpicture}[baseline=0.5cm, x=0.5cm, y=0.5cm]\";\n\nvar endTikz = \"\\\\end{tikzpicture}\";\n\nfunction fromCoordinate(c) {\n  return Curry._3(Printf.sprintf(/* Format */{\n                  _0: {\n                    TAG: /* String_literal */11,\n                    _0: \"\\\\coordinate (\",\n                    _1: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: {\n                        TAG: /* String_literal */11,\n                        _0: \") at (\",\n                        _1: {\n                          TAG: /* Float */8,\n                          _0: /* Float_f */0,\n                          _1: /* No_padding */0,\n                          _2: /* No_precision */0,\n                          _3: {\n                            TAG: /* String_literal */11,\n                            _0: \", \",\n                            _1: {\n                              TAG: /* Float */8,\n                              _0: /* Float_f */0,\n                              _1: /* No_padding */0,\n                              _2: /* No_precision */0,\n                              _3: {\n                                TAG: /* String_literal */11,\n                                _0: \");\",\n                                _1: /* End_of_format */0\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  _1: \"\\\\coordinate (%s) at (%f, %f);\"\n                }), c.coordinate_id, c.x, c.y);\n}\n\nfunction fromDir(dir) {\n  switch (dir) {\n    case /* Above */0 :\n        return \"90\";\n    case /* Below */1 :\n        return \"-90\";\n    case /* Left */2 :\n        return \"180\";\n    case /* Right */3 :\n        return \"0\";\n    \n  }\n}\n\nfunction fromDirs(d1, d2) {\n  return Curry._2(Printf.sprintf(/* Format */{\n                  _0: {\n                    TAG: /* String_literal */11,\n                    _0: \"to[out=\",\n                    _1: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: {\n                        TAG: /* String_literal */11,\n                        _0: \", in=\",\n                        _1: {\n                          TAG: /* String */2,\n                          _0: /* No_padding */0,\n                          _1: {\n                            TAG: /* Char_literal */12,\n                            _0: /* \"]\" */93,\n                            _1: /* End_of_format */0\n                          }\n                        }\n                      }\n                    }\n                  },\n                  _1: \"to[out=%s, in=%s]\"\n                }), fromDir(d1), fromDir(d2));\n}\n\nfunction fromEdge$prime(e) {\n  var match = e.curve;\n  return [\n          \"(\" + (e.scoord + \")\"),\n          match ? Curry._2(Printf.sprintf(/* Format */{\n                      _0: {\n                        TAG: /* Char_literal */12,\n                        _0: /* \" \" */32,\n                        _1: {\n                          TAG: /* String */2,\n                          _0: /* No_padding */0,\n                          _1: {\n                            TAG: /* String_literal */11,\n                            _0: \" (\",\n                            _1: {\n                              TAG: /* String */2,\n                              _0: /* No_padding */0,\n                              _1: {\n                                TAG: /* Char_literal */12,\n                                _0: /* \")\" */41,\n                                _1: /* End_of_format */0\n                              }\n                            }\n                          }\n                        }\n                      },\n                      _1: \" %s (%s)\"\n                    }), fromDirs(match._0, match._1), e.tcoord) : Curry._1(Printf.sprintf(/* Format */{\n                      _0: {\n                        TAG: /* String_literal */11,\n                        _0: \" -- (\",\n                        _1: {\n                          TAG: /* String */2,\n                          _0: /* No_padding */0,\n                          _1: {\n                            TAG: /* Char_literal */12,\n                            _0: /* \")\" */41,\n                            _1: /* End_of_format */0\n                          }\n                        }\n                      },\n                      _1: \" -- (%s)\"\n                    }), e.tcoord)\n        ];\n}\n\nfunction fromEdge(e) {\n  if (!e.draw) {\n    return \"\";\n  }\n  var match = fromEdge$prime(e);\n  return Curry._1(Printf.sprintf(/* Format */{\n                  _0: {\n                    TAG: /* String_literal */11,\n                    _0: \"\\\\draw \",\n                    _1: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: {\n                        TAG: /* Char_literal */12,\n                        _0: /* \";\" */59,\n                        _1: /* End_of_format */0\n                      }\n                    }\n                  },\n                  _1: \"\\\\draw %s;\"\n                }), match[0] + match[1]);\n}\n\nfunction fromFill(state, fill) {\n  var func = function (prevCoord, edges) {\n    if (!edges) {\n      return \"-- cycle\";\n    }\n    var es = edges.tl;\n    var e = edges.hd;\n    if (prevCoord === e.scoord) {\n      var match = fromEdge$prime(e);\n      return match[1] + func(e.tcoord, es);\n    }\n    var match$1 = fromEdge$prime(e);\n    return \" -- \" + (match$1[0] + (match$1[1] + func(e.tcoord, es)));\n  };\n  var match = AppState$YourProjectName.findEdges(state.edges, fill.edges);\n  if (match === undefined) {\n    return \"\";\n  }\n  if (!match) {\n    return \"\";\n  }\n  var head = match.hd;\n  var match$1 = fromEdge$prime(head);\n  return Curry._3(Printf.sprintf(/* Format */{\n                  _0: {\n                    TAG: /* String_literal */11,\n                    _0: \"\\\\fill[\",\n                    _1: {\n                      TAG: /* String */2,\n                      _0: /* No_padding */0,\n                      _1: {\n                        TAG: /* String_literal */11,\n                        _0: \"] \",\n                        _1: {\n                          TAG: /* String */2,\n                          _0: /* No_padding */0,\n                          _1: {\n                            TAG: /* Char_literal */12,\n                            _0: /* \" \" */32,\n                            _1: {\n                              TAG: /* String */2,\n                              _0: /* No_padding */0,\n                              _1: {\n                                TAG: /* Char_literal */12,\n                                _0: /* \";\" */59,\n                                _1: /* End_of_format */0\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  _1: \"\\\\fill[%s] %s %s;\"\n                }), Color$YourProjectName.toString(fill.color), match$1[0] + match$1[1], func(head.tcoord, match.tl));\n}\n\nfunction Tikz(Props) {\n  var state = Props.state;\n  var coordinatesTikz = List.map(fromCoordinate, state.coordinates);\n  var fillsTikz = List.map((function (param) {\n          return fromFill(state, param);\n        }), state.fills);\n  var edgesTikz = List.filter(function (str) {\n          return str !== \"\";\n        })(List.map(fromEdge, state.edges));\n  var tikz = $$String.concat(\"\\n\", Pervasives.$at({\n            hd: beginTikz,\n            tl: /* [] */0\n          }, Pervasives.$at(coordinatesTikz, Pervasives.$at(fillsTikz, Pervasives.$at(edgesTikz, {\n                        hd: endTikz,\n                        tl: /* [] */0\n                      })))));\n  return React.createElement(\"div\", {\n              id: \"\"\n            }, React.createElement(\"textarea\", {\n                  className: \"tikz\",\n                  value: tikz,\n                  onChange: (function (param) {\n                      \n                    })\n                }));\n}\n\nvar make = Tikz;\n\nexport {\n  beginTikz ,\n  endTikz ,\n  fromCoordinate ,\n  fromDir ,\n  fromDirs ,\n  fromEdge$prime ,\n  fromEdge ,\n  fromFill ,\n  make ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Printf from \"bs-platform/lib/es6/printf.js\";\nimport * as Color$YourProjectName from \"../color.bs.js\";\nimport * as AppState$YourProjectName from \"../appState.bs.js\";\n\nfunction convert(a, b, st) {\n  var x = a * st.scale;\n  var y = st.svgy - b * st.scale;\n  return [\n          x,\n          y\n        ];\n}\n\nfunction convertP(param, st) {\n  return convert(param[0], param[1], st);\n}\n\nvar fontSize = \"14\";\n\nfunction coordToSVG(state, c) {\n  var match = convert(c.x, c.y, state);\n  var y = match[1];\n  var x = match[0];\n  return {\n          hd: React.createElement(\"circle\", {\n                key: \"coord_\" + c.coordinate_id,\n                cx: String(x),\n                cy: String(y),\n                fill: \"none\",\n                r: \"2\",\n                stroke: \"black\"\n              }),\n          tl: {\n            hd: React.createElement(\"text\", {\n                  key: \"text_\" + c.coordinate_id,\n                  fontSize: fontSize,\n                  textAnchor: \"middle\",\n                  x: String(x),\n                  y: String(y - 8)\n                }, c.coordinate_id),\n            tl: /* [] */0\n          }\n        };\n}\n\nfunction controlPoint(x, y, d) {\n  switch (d) {\n    case /* Above */0 :\n        return [\n                x,\n                y + 0.5\n              ];\n    case /* Below */1 :\n        return [\n                x,\n                y - 0.5\n              ];\n    case /* Left */2 :\n        return [\n                x - 0.5,\n                y\n              ];\n    case /* Right */3 :\n        return [\n                x + 0.5,\n                y\n              ];\n    \n  }\n}\n\nfunction edgeCurveD(state, e) {\n  var cs = state.coordinates;\n  var sname = e.scoord;\n  var tname = e.tcoord;\n  var c = AppState$YourProjectName.findCoordinate(cs, sname);\n  var match = c !== undefined ? [\n      c.x,\n      c.y\n    ] : [\n      0,\n      0\n    ];\n  var sy = match[1];\n  var sx = match[0];\n  var c$1 = AppState$YourProjectName.findCoordinate(cs, tname);\n  var match$1 = c$1 !== undefined ? [\n      c$1.x,\n      c$1.y\n    ] : [\n      0,\n      0\n    ];\n  var ty = match$1[1];\n  var tx = match$1[0];\n  var match$2 = convert(sx, sy, state);\n  var sY = match$2[1];\n  var sX = match$2[0];\n  var match$3 = convert(tx, ty, state);\n  var tY = match$3[1];\n  var tX = match$3[0];\n  var match$4 = e.curve;\n  if (!match$4) {\n    return [\n            Curry._2(Printf.sprintf(/* Format */{\n                      _0: {\n                        TAG: /* String_literal */11,\n                        _0: \"M \",\n                        _1: {\n                          TAG: /* Float */8,\n                          _0: /* Float_f */0,\n                          _1: /* No_padding */0,\n                          _2: /* No_precision */0,\n                          _3: {\n                            TAG: /* Char_literal */12,\n                            _0: /* \" \" */32,\n                            _1: {\n                              TAG: /* Float */8,\n                              _0: /* Float_f */0,\n                              _1: /* No_padding */0,\n                              _2: /* No_precision */0,\n                              _3: /* End_of_format */0\n                            }\n                          }\n                        }\n                      },\n                      _1: \"M %f %f\"\n                    }), sX, sY),\n            Curry._2(Printf.sprintf(/* Format */{\n                      _0: {\n                        TAG: /* String_literal */11,\n                        _0: \"L \",\n                        _1: {\n                          TAG: /* Float */8,\n                          _0: /* Float_f */0,\n                          _1: /* No_padding */0,\n                          _2: /* No_precision */0,\n                          _3: {\n                            TAG: /* Char_literal */12,\n                            _0: /* \" \" */32,\n                            _1: {\n                              TAG: /* Float */8,\n                              _0: /* Float_f */0,\n                              _1: /* No_padding */0,\n                              _2: /* No_precision */0,\n                              _3: /* End_of_format */0\n                            }\n                          }\n                        }\n                      },\n                      _1: \"L %f %f\"\n                    }), tX, tY)\n          ];\n  }\n  var match$5 = convertP(controlPoint(sx, sy, match$4._0), state);\n  var match$6 = convertP(controlPoint(tx, ty, match$4._1), state);\n  return [\n          Curry._2(Printf.sprintf(/* Format */{\n                    _0: {\n                      TAG: /* String_literal */11,\n                      _0: \"M \",\n                      _1: {\n                        TAG: /* Float */8,\n                        _0: /* Float_f */0,\n                        _1: /* No_padding */0,\n                        _2: /* No_precision */0,\n                        _3: {\n                          TAG: /* Char_literal */12,\n                          _0: /* \" \" */32,\n                          _1: {\n                            TAG: /* Float */8,\n                            _0: /* Float_f */0,\n                            _1: /* No_padding */0,\n                            _2: /* No_precision */0,\n                            _3: /* End_of_format */0\n                          }\n                        }\n                      }\n                    },\n                    _1: \"M %f %f\"\n                  }), sX, sY),\n          Curry._6(Printf.sprintf(/* Format */{\n                    _0: {\n                      TAG: /* String_literal */11,\n                      _0: \"C \",\n                      _1: {\n                        TAG: /* Float */8,\n                        _0: /* Float_f */0,\n                        _1: /* No_padding */0,\n                        _2: /* No_precision */0,\n                        _3: {\n                          TAG: /* Char_literal */12,\n                          _0: /* \" \" */32,\n                          _1: {\n                            TAG: /* Float */8,\n                            _0: /* Float_f */0,\n                            _1: /* No_padding */0,\n                            _2: /* No_precision */0,\n                            _3: {\n                              TAG: /* String_literal */11,\n                              _0: \", \",\n                              _1: {\n                                TAG: /* Float */8,\n                                _0: /* Float_f */0,\n                                _1: /* No_padding */0,\n                                _2: /* No_precision */0,\n                                _3: {\n                                  TAG: /* Char_literal */12,\n                                  _0: /* \" \" */32,\n                                  _1: {\n                                    TAG: /* Float */8,\n                                    _0: /* Float_f */0,\n                                    _1: /* No_padding */0,\n                                    _2: /* No_precision */0,\n                                    _3: {\n                                      TAG: /* String_literal */11,\n                                      _0: \", \",\n                                      _1: {\n                                        TAG: /* Float */8,\n                                        _0: /* Float_f */0,\n                                        _1: /* No_padding */0,\n                                        _2: /* No_precision */0,\n                                        _3: {\n                                          TAG: /* Char_literal */12,\n                                          _0: /* \" \" */32,\n                                          _1: {\n                                            TAG: /* Float */8,\n                                            _0: /* Float_f */0,\n                                            _1: /* No_padding */0,\n                                            _2: /* No_precision */0,\n                                            _3: /* End_of_format */0\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    _1: \"C %f %f, %f %f, %f %f\"\n                  }), match$5[0], match$5[1], match$6[0], match$6[1], tX, tY)\n        ];\n}\n\nfunction edgeToSVG(state, e) {\n  var match = edgeCurveD(state, e);\n  var d = match[0] + match[1];\n  return {\n          hd: React.createElement(\"path\", {\n                key: e.edge_id,\n                id: e.edge_id,\n                d: d,\n                fill: \"none\",\n                stroke: e.draw ? \"black\" : \"lightseagreen\"\n              }),\n          tl: {\n            hd: React.createElement(\"text\", {\n                  key: \"text_\" + e.edge_id,\n                  fill: \"blue\",\n                  fontSize: fontSize,\n                  textAnchor: \"middle\"\n                }, React.createElement(\"textPath\", {\n                      key: \"textPath_\" + e.edge_id,\n                      startOffset: \"50%\",\n                      xlinkHref: \"#\" + e.edge_id\n                    }, e.edge_id)),\n            tl: /* [] */0\n          }\n        };\n}\n\nfunction fillToSVG(state, fill) {\n  var d = function (edges) {\n    var func = function (prevCoordName, es) {\n      if (!es) {\n        return \"z\";\n      }\n      var rest = es.tl;\n      var e = es.hd;\n      var match = edgeCurveD(state, e);\n      var c = match[1];\n      if (prevCoordName === e.scoord) {\n        return c + func(e.tcoord, rest);\n      }\n      var c$1 = AppState$YourProjectName.findCoordinate(state.coordinates, e.scoord);\n      var tmp;\n      if (c$1 !== undefined) {\n        var match$1 = convert(c$1.x, c$1.y, state);\n        tmp = Curry._2(Printf.sprintf(/* Format */{\n                  _0: {\n                    TAG: /* String_literal */11,\n                    _0: \"L \",\n                    _1: {\n                      TAG: /* Float */8,\n                      _0: /* Float_f */0,\n                      _1: /* No_padding */0,\n                      _2: /* No_precision */0,\n                      _3: {\n                        TAG: /* Char_literal */12,\n                        _0: /* \" \" */32,\n                        _1: {\n                          TAG: /* Float */8,\n                          _0: /* Float_f */0,\n                          _1: /* No_padding */0,\n                          _2: /* No_precision */0,\n                          _3: /* End_of_format */0\n                        }\n                      }\n                    }\n                  },\n                  _1: \"L %f %f\"\n                }), match$1[0], match$1[1]);\n      } else {\n        tmp = \"\";\n      }\n      return tmp + (c + func(e.tcoord, rest));\n    };\n    if (!edges) {\n      return \"\";\n    }\n    var head = edges.hd;\n    var match = edgeCurveD(state, head);\n    return match[0] + (match[1] + func(head.tcoord, edges.tl));\n  };\n  var edges = AppState$YourProjectName.findEdges(state.edges, fill.edges);\n  if (edges !== undefined) {\n    return React.createElement(\"path\", {\n                key: fill.fill_id,\n                d: d(edges),\n                fill: Color$YourProjectName.toString(fill.color),\n                stroke: \"none\"\n              });\n  } else {\n    return React.createElement(React.Fragment, undefined);\n  }\n}\n\nfunction Previewer(Props) {\n  var state = Props.state;\n  var coords = $$Array.of_list(List.concat({\n            hd: List.map((function (param) {\n                    return fillToSVG(state, param);\n                  }), state.fills),\n            tl: {\n              hd: List.concat(List.map((function (param) {\n                          return coordToSVG(state, param);\n                        }), state.coordinates)),\n              tl: {\n                hd: List.concat(List.map((function (param) {\n                            return edgeToSVG(state, param);\n                          }), state.edges)),\n                tl: /* [] */0\n              }\n            }\n          }));\n  return React.createElement(\"div\", {\n              className: \"preview\"\n            }, React.createElement(\"svg\", {\n                  height: String(state.svgy),\n                  width: String(state.svgx),\n                  x: \"0\",\n                  y: \"0\"\n                }, coords));\n}\n\nvar RR;\n\nvar distControlPoint = 0.5;\n\nvar make = Previewer;\n\nexport {\n  RR ,\n  convert ,\n  convertP ,\n  fontSize ,\n  coordToSVG ,\n  distControlPoint ,\n  controlPoint ,\n  edgeCurveD ,\n  edgeToSVG ,\n  fillToSVG ,\n  make ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\nimport * as Belt_Float from \"bs-platform/lib/es6/belt_Float.js\";\n\nvar name = \"coordinate\";\n\nfunction render(c) {\n  var s = \"(\" + (c.coordinate_id + (\") x=\" + (String(c.x) + (\" y=\" + String(c.y)))));\n  return React.createElement(\"div\", {\n              key: c.coordinate_id\n            }, s);\n}\n\nvar Coordinate = {\n  name: name,\n  render: render\n};\n\nfunction Coordinate$Add(Props) {\n  var updater = Props.updater;\n  var match = React.useState(function () {\n        return {\n                name: \"\",\n                x: \"0\",\n                y: \"0\"\n              };\n      });\n  var setState = match[1];\n  var state = match[0];\n  var handleName = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: a,\n                          x: st.x,\n                          y: st.y\n                        };\n                }));\n  };\n  var handleX = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: st.name,\n                          x: a,\n                          y: st.y\n                        };\n                }));\n  };\n  var handleY = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (st) {\n                  return {\n                          name: st.name,\n                          x: st.x,\n                          y: a\n                        };\n                }));\n  };\n  var handleSubmit = function (e) {\n    e.preventDefault();\n    var match = Belt_Float.fromString(state.x);\n    var match$1 = Belt_Float.fromString(state.y);\n    if (match !== undefined && match$1 !== undefined) {\n      Curry._3(updater, state.name, match, match$1);\n      return Curry._1(setState, (function (param) {\n                    return {\n                            name: \"\",\n                            x: \"\",\n                            y: \"\"\n                          };\n                  }));\n    }\n    \n  };\n  return React.createElement(\"div\", {\n              className: \"add coordinate\"\n            }, React.createElement(\"form\", {\n                  onSubmit: handleSubmit\n                }, \"Coordinate: \", \"name=\", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"name\",\n                      type: \"text\",\n                      value: state.name,\n                      onChange: handleName\n                    }), \", x=\", React.createElement(\"input\", {\n                      className: \"input-num\",\n                      name: \"x\",\n                      type: \"text\",\n                      value: state.x,\n                      onChange: handleX\n                    }), \", y=\", React.createElement(\"input\", {\n                      className: \"input-num\",\n                      name: \"y\",\n                      type: \"text\",\n                      value: state.y,\n                      onChange: handleY\n                    }), React.createElement(\"input\", {\n                      type: \"submit\",\n                      value: \"add/modify\",\n                      onClick: (function (param) {\n                          \n                        })\n                    })));\n}\n\nvar Add = {\n  make: Coordinate$Add\n};\n\nvar testa = {\n  coordinate_id: \"a\",\n  x: 1,\n  y: 2\n};\n\nvar testb = {\n  coordinate_id: \"b\",\n  x: 3,\n  y: 4\n};\n\nexport {\n  Coordinate ,\n  testa ,\n  testb ,\n  name ,\n  render ,\n  Add ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\n\nvar initState = {\n  name: \"\"\n};\n\nfunction RemoveName(Props) {\n  var updater = Props.updater;\n  var match = React.useState(function () {\n        return initState;\n      });\n  var setState = match[1];\n  var state = match[0];\n  var handleName = function (e) {\n    var a = e.target.value;\n    return Curry._1(setState, (function (param) {\n                  return {\n                          name: a\n                        };\n                }));\n  };\n  var handleSubmit = function (e) {\n    e.preventDefault();\n    return Curry._1(updater, state.name);\n  };\n  return React.createElement(\"div\", undefined, React.createElement(\"form\", {\n                  onSubmit: handleSubmit\n                }, \"Remove: \", React.createElement(\"input\", {\n                      className: \"input-name\",\n                      name: \"name\",\n                      type: \"text\",\n                      value: state.name,\n                      onChange: handleName\n                    }), React.createElement(\"input\", {\n                      type: \"submit\",\n                      value: \"remove\",\n                      onClick: (function (param) {\n                          \n                        })\n                    })));\n}\n\nvar make = RemoveName;\n\nexport {\n  initState ,\n  make ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as List from \"bs-platform/lib/es6/list.js\";\nimport * as $$Array from \"bs-platform/lib/es6/array.js\";\nimport * as Curry from \"bs-platform/lib/es6/curry.js\";\nimport * as React from \"react\";\n\nfunction MakeCellSelector(C) {\n  var Cell_selector$MakeCellSelector = function (Props) {\n    var cs = Props.cs;\n    return React.createElement(\"div\", {\n                className: \"selector\"\n              }, React.createElement(\"div\", {\n                    className: \"selector-header\"\n                  }, C.name), React.createElement(\"div\", {\n                    className: \"overflow-y \" + C.name\n                  }, React.createElement(React.Fragment, undefined, $$Array.of_list(List.map((function (c) {\n                                  return Curry._1(C.render, c);\n                                }), cs)))));\n  };\n  return {\n          empty: /* [] */0,\n          make: Cell_selector$MakeCellSelector\n        };\n}\n\nexport {\n  MakeCellSelector ,\n  \n}\n/* react Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Edge$YourProjectName from \"../edge/edge.bs.js\";\nimport * as Cell_selector$YourProjectName from \"./cell_selector.bs.js\";\n\nvar include = Cell_selector$YourProjectName.MakeCellSelector({\n      name: Edge$YourProjectName.name,\n      render: Edge$YourProjectName.render\n    });\n\nvar empty = include.empty;\n\nvar make = include.make;\n\nexport {\n  empty ,\n  make ,\n  \n}\n/* include Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Fill$YourProjectName from \"../fill/fill.bs.js\";\nimport * as Cell_selector$YourProjectName from \"./cell_selector.bs.js\";\n\nvar include = Cell_selector$YourProjectName.MakeCellSelector({\n      name: Fill$YourProjectName.name,\n      render: Fill$YourProjectName.render\n    });\n\nvar empty = include.empty;\n\nvar make = include.make;\n\nexport {\n  empty ,\n  make ,\n  \n}\n/* include Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as Coordinate$YourProjectName from \"../coordinate/coordinate.bs.js\";\nimport * as Cell_selector$YourProjectName from \"./cell_selector.bs.js\";\n\nvar include = Cell_selector$YourProjectName.MakeCellSelector({\n      name: Coordinate$YourProjectName.name,\n      render: Coordinate$YourProjectName.render\n    });\n\nvar empty = include.empty;\n\nvar make = include.make;\n\nexport {\n  empty ,\n  make ,\n  \n}\n/* include Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as React from \"react\";\nimport * as Edge$YourProjectName from \"./edge/edge.bs.js\";\nimport * as Fill$YourProjectName from \"./fill/fill.bs.js\";\nimport * as Tikz$YourProjectName from \"./tikz.bs.js\";\nimport * as AppState$YourProjectName from \"./appState.bs.js\";\nimport * as Previewer$YourProjectName from \"./previewer/previewer.bs.js\";\nimport * as Coordinate$YourProjectName from \"./coordinate/coordinate.bs.js\";\nimport * as RemoveName$YourProjectName from \"./removeName.bs.js\";\nimport * as EdgeSelector$YourProjectName from \"./selector/edgeSelector.bs.js\";\nimport * as FillSelector$YourProjectName from \"./selector/fillSelector.bs.js\";\nimport * as CoordinateSelector$YourProjectName from \"./selector/coordinateSelector.bs.js\";\n\nrequire(\"./app.css\");\n\nfunction App(Props) {\n  var match = React.useState(function () {\n        return {\n                mode: /* Neutral */0,\n                scale: 50,\n                svgx: 500,\n                svgy: 300,\n                namePool: AppState$YourProjectName.NamePool.empty,\n                coordinates: CoordinateSelector$YourProjectName.empty,\n                edges: EdgeSelector$YourProjectName.empty,\n                fills: FillSelector$YourProjectName.empty\n              };\n      });\n  var setState = match[1];\n  var state = match[0];\n  return React.createElement(\"div\", {\n              id: \"app\"\n            }, React.createElement(\"h1\", undefined, \"Oekaki\"), React.createElement(\"div\", {\n                  id: \"output\"\n                }, React.createElement(Previewer$YourProjectName.make, {\n                      state: state\n                    }), React.createElement(Tikz$YourProjectName.make, {\n                      state: state\n                    })), React.createElement(\"div\", {\n                  id: \"selectors\"\n                }, React.createElement(CoordinateSelector$YourProjectName.make, {\n                      cs: state.coordinates\n                    }), React.createElement(EdgeSelector$YourProjectName.make, {\n                      cs: state.edges\n                    }), React.createElement(FillSelector$YourProjectName.make, {\n                      cs: state.fills\n                    })), React.createElement(\"div\", {\n                  id: \"message\"\n                }, \"message: \"), React.createElement(RemoveName$YourProjectName.make, {\n                  updater: (function (param) {\n                      return AppState$YourProjectName.remove(setState, param);\n                    })\n                }), React.createElement(Coordinate$YourProjectName.Add.make, {\n                  updater: (function (param, param$1, param$2) {\n                      return AppState$YourProjectName.addCoordinate(setState, param, param$1, param$2);\n                    })\n                }), React.createElement(Edge$YourProjectName.Add.make, {\n                  updater: (function (param, param$1, param$2, param$3, param$4) {\n                      return AppState$YourProjectName.addEdge(setState, param, param$1, param$2, param$3, param$4);\n                    })\n                }), React.createElement(Fill$YourProjectName.Add.make, {\n                  updater: (function (param, param$1, param$2) {\n                      return AppState$YourProjectName.addFill(setState, param, param$1, param$2);\n                    })\n                }));\n}\n\nvar R;\n\nvar RR;\n\nvar make = App;\n\nexport {\n  R ,\n  RR ,\n  make ,\n  \n}\n/*  Not a pure module */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {make as App} from './app.bs.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}